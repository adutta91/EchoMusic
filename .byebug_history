exit
@song
exit
song_params.artist_id
song_params['artist_id']
song_params[artist_id]
song_params
c
result
c
sf
SongFollow.all
c
SongFollow.all
song_id
c
SongFollow.all
song_follows
song_follow
song_id
c
song_id
user_id
c
user_id
result
song_id
song_follow
c
song_id
user_id
song_follow
exit
song_follows
song_id
user_id
c
n
s
song_id
song_is
user_id
c
@song_follow
c
@song_follow.id
c
@song_follow.id
c
@song_follow.id
c
@song_follow.id
c
@song_follow
c
@song_follow
exit
@song_follow
c
song_follow_params
params
c
@songs
c
@songs
@songs.compact
@songs
c
@songs
c
following_user_ids.include?(user.id)
following_user_ids.includes?(user.id)
following_user_ids.class
type(following_user_ids)
user.id
c
following_user_ids
exit
exjt
user
song.following_users
song
exit
@songs[0].following_users.length
@songs[0].following_users
@songs[0]
@songs
c
@song_follow
c
song_follow.id
exit
song_follow
c
song_follows
exit
SongFollow.find_specific_follow(user_id, song_id)
exit
Integer(user_id)
user_id
exit
song_follow_params
c
@song_follow
c
@user.followed_songs
@user
c
params
@user
@user.followed_songs
c
user_params
c
user_params
c
user_params
params
c
params
@user
user
params
user_params
c
x
params
@user
c
@user
c
@songs
c
@songs[0].id
current_user.id
@songs
c
current_user.id
params["submitted"]
params
params[submitted]
c
params[submitted]
c
params
c
current_user
c
params
c
params
c
params
c
params
[arams
c
params
c
params
c
params[:song]
params
c
params
c
params
c
params
c
params
c
params
c
params
session
params
session
c
session
data
params
c
params
c
params
c
params
c
query
params
c
@songs
params
exit
params
c
logged_in?
current_user
@user
c
current_user
@user
use
c
current_user
@token
c
@token
c
current_user
c
exit
current_user
exit
logged_in?
logged_in
current_user
exit
logged_in?
current_user
@user
exit
@song
c
n
exit
@user.sessions
@user
n
s
exit
curren_user
exit
@user
exit
params
exit
@current_user
session[:session_token]
session
params
current_user
c
current_user
c
@user
exit
params
exit
@user
exit
n
s
@user
current_user
